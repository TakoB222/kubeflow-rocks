# Based on: https://github.com/open-telemetry/opentelemetry-collector-releases/blob/main/distributions/otelcol/Dockerfile
name: opentelemetry-collector
summary: Crucial component in the OpenTelemetry ecosystem.
description: |
  Designed to collect, process, and export telemetry data such as metrics, logs, 
  and traces from various sources to multiple destinations.
version: "0.109.0"
license: Apache-2.0
base: ubuntu@22.04
run-user: _daemon_
services:
  otelcol:
    override: replace
    summary: "Entry point for opentelemetry-collector oci-image"
    startup: enabled
    command: "/otelcol --config /config.yaml"
    user: ubuntu
platforms:
  amd64:

parts:
  otelcol:
    plugin: nil
    build-snaps:
      - go/1.21/stable
    source: https://github.com/open-telemetry/opentelemetry-collector-releases.git
    source-type: git
    source-tag: v0.109.0
    build-packages:
      - ca-certificates
      - make
    build-environment:
      - CGO_ENABLED: 0
      - GOOS: linux
    override-build: |
      # Build binary
      make build DISTRIBUTIONS="otelcol"
      
      # Copy opentelemetry-collector config
      cp -r $CRAFT_PART_BUILD/distributions/otelcol/config.yaml $CRAFT_PART_INSTALL
      
      # Copy binary
      cp $CRAFT_PART_BUILD/distributions/otelcol/_build/otelcol $CRAFT_PART_INSTALL

  non-root-user:
    plugin: nil
    after: [ otelcol ]
    overlay-script: |
      # Create a user in the $CRAFT_OVERLAY chroot
      groupadd -R $CRAFT_OVERLAY -g 1001 ubuntu
      useradd -R $CRAFT_OVERLAY -M -r -u 1001 -g ubuntu ubuntu


  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
       dpkg-query --root=${CRAFT_PROJECT_DIR}/../bundles/ubuntu-22.04/rootfs/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
       > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query
